<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ec.test.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="org.ec.test.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="SMALLINT" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="locked" jdbcType="INTEGER" property="locked" />
    <result column="expired" jdbcType="INTEGER" property="expired" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, account, password, name, nick_name, email, phone, birthday, sex, avatar, role_id, 
    dept_id, enabled, locked, expired, type, path, tenant_code, create_user, create_time, 
    update_user, update_time
  </sql>
  <select id="selectByExample" parameterType="org.ec.test.entity.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.ec.test.entity.UserExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ec.test.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (id, account, password, 
      name, nick_name, email, 
      phone, birthday, sex, 
      avatar, role_id, dept_id, 
      enabled, locked, expired, 
      type, path, tenant_code, 
      create_user, create_time, update_user, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{sex,jdbcType=SMALLINT}, 
      #{avatar,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=INTEGER}, #{locked,jdbcType=INTEGER}, #{expired,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.ec.test.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="expired != null">
        expired,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=SMALLINT},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=INTEGER},
      </if>
      <if test="expired != null">
        #{expired,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ec.test.entity.UserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=SMALLINT},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=INTEGER},
      </if>
      <if test="record.expired != null">
        expired = #{record.expired,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set id = #{record.id,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=SMALLINT},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=INTEGER},
      expired = #{record.expired,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ec.test.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=SMALLINT},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=INTEGER},
      </if>
      <if test="expired != null">
        expired = #{expired,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ec.test.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=SMALLINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      locked = #{locked,jdbcType=INTEGER},
      expired = #{expired,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    (id, account, password, name, nick_name, email, phone, birthday, sex, avatar, role_id, 
      dept_id, enabled, locked, expired, type, path, tenant_code, create_user, create_time, 
      update_user, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.account,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.nickName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, 
        #{item.phone,jdbcType=VARCHAR}, #{item.birthday,jdbcType=TIMESTAMP}, #{item.sex,jdbcType=SMALLINT}, 
        #{item.avatar,jdbcType=VARCHAR}, #{item.roleId,jdbcType=VARCHAR}, #{item.deptId,jdbcType=VARCHAR}, 
        #{item.enabled,jdbcType=INTEGER}, #{item.locked,jdbcType=INTEGER}, #{item.expired,jdbcType=INTEGER}, 
        #{item.type,jdbcType=INTEGER}, #{item.path,jdbcType=VARCHAR}, #{item.tenantCode,jdbcType=VARCHAR}, 
        #{item.createUser,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=BIGINT}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <choose>
      <when test="selective != null and selective.length > 0">
        insert into user (
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
          (
          <foreach collection="selective" item="column" separator=",">
            <if test="'id'.toString() == column.value">
              #{item.id,jdbcType=BIGINT}
            </if>
            <if test="'account'.toString() == column.value">
              #{item.account,jdbcType=VARCHAR}
            </if>
            <if test="'password'.toString() == column.value">
              #{item.password,jdbcType=VARCHAR}
            </if>
            <if test="'name'.toString() == column.value">
              #{item.name,jdbcType=VARCHAR}
            </if>
            <if test="'nick_name'.toString() == column.value">
              #{item.nickName,jdbcType=VARCHAR}
            </if>
            <if test="'email'.toString() == column.value">
              #{item.email,jdbcType=VARCHAR}
            </if>
            <if test="'phone'.toString() == column.value">
              #{item.phone,jdbcType=VARCHAR}
            </if>
            <if test="'birthday'.toString() == column.value">
              #{item.birthday,jdbcType=TIMESTAMP}
            </if>
            <if test="'sex'.toString() == column.value">
              #{item.sex,jdbcType=SMALLINT}
            </if>
            <if test="'avatar'.toString() == column.value">
              #{item.avatar,jdbcType=VARCHAR}
            </if>
            <if test="'role_id'.toString() == column.value">
              #{item.roleId,jdbcType=VARCHAR}
            </if>
            <if test="'dept_id'.toString() == column.value">
              #{item.deptId,jdbcType=VARCHAR}
            </if>
            <if test="'enabled'.toString() == column.value">
              #{item.enabled,jdbcType=INTEGER}
            </if>
            <if test="'locked'.toString() == column.value">
              #{item.locked,jdbcType=INTEGER}
            </if>
            <if test="'expired'.toString() == column.value">
              #{item.expired,jdbcType=INTEGER}
            </if>
            <if test="'type'.toString() == column.value">
              #{item.type,jdbcType=INTEGER}
            </if>
            <if test="'path'.toString() == column.value">
              #{item.path,jdbcType=VARCHAR}
            </if>
            <if test="'tenant_code'.toString() == column.value">
              #{item.tenantCode,jdbcType=VARCHAR}
            </if>
            <if test="'create_user'.toString() == column.value">
              #{item.createUser,jdbcType=BIGINT}
            </if>
            <if test="'create_time'.toString() == column.value">
              #{item.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="'update_user'.toString() == column.value">
              #{item.updateUser,jdbcType=BIGINT}
            </if>
            <if test="'update_time'.toString() == column.value">
              #{item.updateTime,jdbcType=TIMESTAMP}
            </if>
          </foreach>
          )
        </foreach>
      </when>
      <otherwise>
        <foreach collection="list" item="item" separator=";">
          insert into user
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              id,
              <if test="item.account != null">
                account,
              </if>
              <if test="item.password != null">
                password,
              </if>
              <if test="item.name != null">
                name,
              </if>
              <if test="item.nickName != null">
                nick_name,
              </if>
              <if test="item.email != null">
                email,
              </if>
              <if test="item.phone != null">
                phone,
              </if>
              <if test="item.birthday != null">
                birthday,
              </if>
              <if test="item.sex != null">
                sex,
              </if>
              <if test="item.avatar != null">
                avatar,
              </if>
              <if test="item.roleId != null">
                role_id,
              </if>
              <if test="item.deptId != null">
                dept_id,
              </if>
              <if test="item.enabled != null">
                enabled,
              </if>
              <if test="item.locked != null">
                locked,
              </if>
              <if test="item.expired != null">
                expired,
              </if>
              <if test="item.type != null">
                type,
              </if>
              <if test="item.path != null">
                path,
              </if>
              <if test="item.tenantCode != null">
                tenant_code,
              </if>
              <if test="item.createUser != null">
                create_user,
              </if>
              <if test="item.createTime != null">
                create_time,
              </if>
              <if test="item.updateUser != null">
                update_user,
              </if>
              <if test="item.updateTime != null">
                update_time,
              </if>
            </trim>
          </trim>
          values
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              #{item.id,jdbcType=BIGINT},
              <if test="item.account != null">
                #{item.account,jdbcType=VARCHAR},
              </if>
              <if test="item.password != null">
                #{item.password,jdbcType=VARCHAR},
              </if>
              <if test="item.name != null">
                #{item.name,jdbcType=VARCHAR},
              </if>
              <if test="item.nickName != null">
                #{item.nickName,jdbcType=VARCHAR},
              </if>
              <if test="item.email != null">
                #{item.email,jdbcType=VARCHAR},
              </if>
              <if test="item.phone != null">
                #{item.phone,jdbcType=VARCHAR},
              </if>
              <if test="item.birthday != null">
                #{item.birthday,jdbcType=TIMESTAMP},
              </if>
              <if test="item.sex != null">
                #{item.sex,jdbcType=SMALLINT},
              </if>
              <if test="item.avatar != null">
                #{item.avatar,jdbcType=VARCHAR},
              </if>
              <if test="item.roleId != null">
                #{item.roleId,jdbcType=VARCHAR},
              </if>
              <if test="item.deptId != null">
                #{item.deptId,jdbcType=VARCHAR},
              </if>
              <if test="item.enabled != null">
                #{item.enabled,jdbcType=INTEGER},
              </if>
              <if test="item.locked != null">
                #{item.locked,jdbcType=INTEGER},
              </if>
              <if test="item.expired != null">
                #{item.expired,jdbcType=INTEGER},
              </if>
              <if test="item.type != null">
                #{item.type,jdbcType=INTEGER},
              </if>
              <if test="item.path != null">
                #{item.path,jdbcType=VARCHAR},
              </if>
              <if test="item.tenantCode != null">
                #{item.tenantCode,jdbcType=VARCHAR},
              </if>
              <if test="item.createUser != null">
                #{item.createUser,jdbcType=BIGINT},
              </if>
              <if test="item.createTime != null">
                #{item.createTime,jdbcType=TIMESTAMP},
              </if>
              <if test="item.updateUser != null">
                #{item.updateUser,jdbcType=BIGINT},
              </if>
              <if test="item.updateTime != null">
                #{item.updateTime,jdbcType=TIMESTAMP},
              </if>
            </trim>
          </trim>
        </foreach>
      </otherwise>
    </choose>
  </insert>
</mapper>